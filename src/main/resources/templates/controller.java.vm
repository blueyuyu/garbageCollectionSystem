package ${package.Controller};

## 给模板文件导包
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;

##继续导包，模板引擎语法 导报 user 与 其类型
import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};


#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

##    代码生成器在此处加逻辑
##    他的 table.serviceName 代表引入的对象的类    ${table.entityPath}代表user
    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    @PostMapping
    public Result save(@RequestBody ${entity} ${table.entityPath}) {
##        新增或者更新
         ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
         return Result.success();
    }

    @DeleteMapping("/{id}")
    public Result delete(@PathVariable Integer id) {
##        删除
         ${table.entityPath}Service.removeById(id);
        return Result.success();
    }

    // 使用post删除
    @PostMapping("/del/batch")
    public Result deleteBatch(@RequestBody List<Integer> ids){
         ${table.entityPath}Service.removeByIds(ids);
         return Result.success();
    }

    // List<${entity}>
    @GetMapping
    public Result findAll() {
##          查询所有的数据
        ${table.entityPath}Service.list();
        return Result.success();
    }

    //${entity}
    @GetMapping("/{id}")
    public Result findOne(@PathVariable Integer id) {
    ##        根据id 查询
        ${table.entityPath}Service.getById(id);
        return Result.success();
    }

    //Page<${entity}>
    @GetMapping("/page")
    public Result findPage(@RequestParam Integer pageNum,
    @RequestParam Integer pageSize) {
##        分页查询
            QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
            queryWrapper.orderByDesc("id");
            ${table.entityPath}Service.page(new Page<>(pageNum, pageSize));
            return Result.success();
        }
}

#end